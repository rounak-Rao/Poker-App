from deck import *
from player import *
from betting import *
from winner import *

class GameManager:
    def __init__(self) -> None:
        self.players = []
        self.game_state = 'waiting' # waiting/ playing/ finished
        self.community_cards = []
        self.deck = Deck()

    def create_player(self, stack, name):
        if len(self.players) < 9:
            is_host = len(self.players) == 0 
            p = Player(stack, name, len(self.players), is_host)
            self.players.append(p)
            return p
        return None
    
    def deal_cards(self):       
        for i in range(2):
            for p in self.players:
                card = self.deck.deal()
                p.deal_cards(card)

    
    def start_game(self):
        if len(self.players) < 2:
            return False
        self.game_state = 'playing'
        return True

    def get_game_state(self):
        return {
            "players": [{"name": p.name, "stack": p.stack} for p in self.players],
            "game_state": self.game_state,
            "community_cards": self.community_cards,
        }

    def end_game(self):
        self.game_state = 'finished'
    


        